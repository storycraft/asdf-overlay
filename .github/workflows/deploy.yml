name: deploy

on:
  workflow_call:
    inputs:
      signing-policy:
        required: false
        type: string
    outputs:
      unsigned-artifact-id:
        description: "Unsigned artifact Id"
        value: ${{ jobs.deploy.outputs.unsigned-artifact-id }}
      signed-artifact-id:
        description: "Signed artifact Id"
        value: ${{ jobs.deploy.outputs.signed-artifact-id }}
    secrets:
      SIGNPATH_API_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      signing-policy:
        type: choice
        required: false
        description: Signing policy
        options:
          - 'test-signing'
          - 'release-signing'
  pull_request:
    paths:
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'crates/**/*'
      - 'src/**/*'
      - 'xtask/**/*'

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: windows-latest
    environment: deploy
    outputs:
      unsigned-artifact-id: ${{ steps.upload-unsigned-artifact.outputs.artifact-id }}
      signed-artifact-id: ${{ steps.upload-signed-artifact.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup cd
        run: |
          git config user.name "Asdf Overlay Continuous Deployment"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Extract Commit SHA
        id: commit-sha
        run: |
          "short_sha=" + "${{ github.sha }}".SubString(0, 8) >> $env:GITHUB_OUTPUT

      - name: Setup rust
        uses: dtolnay/rust-toolchain@nightly

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: 'deploy'
          cache-on-failure: true
          cache-all-crates: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Deploy
        run: npm run ci:deploy

      - name: Upload unsignd artifact
        id: upload-unsigned-artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'asdf-overlay-artifact-unsigned-${{ steps.commit-sha.outputs.short_sha }}'
          path: |
            packages/core/addon-aarch64.node
            packages/core/addon-x64.node
            packages/core/asdf_overlay-aarch64.dll
            packages/core/asdf_overlay-x86.dll
            packages/core/asdf_overlay-x64.dll

      - name: Sign artifacts
        if: ${{ inputs.signing-policy != '' }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: 'ce1cab5c-4a01-4210-a422-9f92bb175179'
          project-slug: 'asdf-overlay'
          signing-policy-slug: ${{ inputs.signing-policy }}
          artifact-configuration-slug: 'github-action-deploy'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: 'target/out-signed-artifact'

      - name: Upload signed artifact
        id: upload-signed-artifact
        if: ${{ inputs.signing-policy != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'asdf-overlay-artifact-${{ steps.commit-sha.outputs.short_sha }}'
          path: |
            target/out-signed-artifact/**/*
